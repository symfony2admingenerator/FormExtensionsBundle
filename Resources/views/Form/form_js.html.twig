{% block s2a_bootstrap_collection_js_prototype %}
{% autoescape false %}
{% spaceless %}
    $field.bootstrapCollection({
        allow_add:        {{ allow_add|e4js }},
        allow_delete:     {{ allow_delete|e4js }},
        sortable:         {{ sortable|e4js }},
        sortable_field:   {{ sortable_field|e4js }},
        prototype_name:   {{ prototype_name|e4js }},
        trans: {
            new_label:      {{ new_label|trans({}, translation_domain)|e4js }},
            confirm:        {{ 's2a_bootstrap_collection.confirm.delete'|trans({}, 'AdmingeneratorFormExtensions')|e4js }},
            confirm_batch:  {{ 's2a_bootstrap_collection.confirm.batchDelete'|trans({}, 'AdmingeneratorFormExtensions')|e4js }}
        },
        javascript: function(id) {
        {% if prototype is defined %}
            {% if prototype.vars.compound %}
                {% for child in prototype %}
                    $field = $('#' + id + '_{{ child.vars.name }}');
                    {{ form_js(child, true) }}
                {% endfor %}
            {% else %}
                $field = $('#' + id);
                {{ form_js(prototype, true) }}
            {% endif %}
        {% endif %}
        }
    });
{% endspaceless %}
{% endautoescape %}
{% endblock s2a_bootstrap_collection_js_prototype %}

{% block s2a_collection_fieldset_js %}
{% autoescape false %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        var $field = $('#{{ id }}');

    {% block s2a_collection_fieldset_js_prototype %}
        {{ block('s2a_bootstrap_collection_js_prototype') }}
    {% endblock s2a_collection_fieldset_js_prototype %}
    });
</script>

{% for child in form %}
    {{ form_js(child) }}
{% endfor %}
{% endspaceless %}
{% endautoescape %}
{% endblock s2a_collection_fieldset_js %}

{% block s2a_collection_table_js %}
{% autoescape false %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        var $field = $('#{{ id }}');

    {% block s2a_collection_table_js_prototype %}
        {{ block('s2a_bootstrap_collection_js_prototype') }}
    {% endblock s2a_collection_table_js_prototype %}
    });
</script>

{% for child in form %}
    {{ form_js(child) }}
{% endfor %}
{% endspaceless %}
{% endautoescape %}
{% endblock s2a_collection_table_js %}

{% block s2a_upload_collection_js %}
{% autoescape false %}
{% spaceless %}
<script type="text/javascript">
    $(document).ready(function(){
        var $field = $('#{{ id }}');

    {% block s2a_upload_collection_js_prototype %}
        $field.uploadCollection({
            autoUpload:               {{ autoUpload|e4js }},
            urlUpload:                {{ uploadRouteName is empty ? 'undefined' : path(uploadRouteName, uploadRouteParameters)|e4js }},
            sortable:                 {{ sortable|e4js }},
            sortable_field:           {{ sortable_field|e4js }},
            maxNumberOfFiles:         {{ maxNumberOfFiles|e4js }},
            maxFileSize:              {{ maxFileSize|e4js }},
            minFileSize:              {{ minFileSize|e4js }},
            acceptFileTypes:          {{ acceptFileTypes }},
            previewAsCanvas:          {{ previewAsCanvas|e4js }},
            prependFiles:             {{ prependFiles|e4js }},
            loadImageFileTypes:       {{ loadImageFileTypes }},
            loadImageMaxFileSize:     {{ loadImageMaxFileSize|e4js }},
            previewMaxWidth:          {{ previewMaxWidth|e4js }},
            previewMaxHeight:         {{ previewMaxHeight|e4js }},
            messages: {
                maxNumberOfFiles:   '{{ 's2a_upload_collection.errors.maxNumberOfFiles'|trans({}, 'AdmingeneratorFormExtensions') }}',
                acceptFileTypes:    '{{ 's2a_upload_collection.errors.acceptFileTypes'|trans({}, 'AdmingeneratorFormExtensions') }}',
                maxFileSize:        '{{ 's2a_upload_collection.errors.maxFileSize'|trans({}, 'AdmingeneratorFormExtensions') }}',
                minFileSize:        '{{ 's2a_upload_collection.errors.minFileSize'|trans({}, 'AdmingeneratorFormExtensions') }}',
                confirmBatchDelete: '{{ 's2a_upload_collection.confirm.batchDelete'|trans({}, 'AdmingeneratorFormExtensions') }}'
            }
        });
    {% endblock s2a_upload_collection_js_prototype %}

        // Create JSON array for existing files
        var files = {
            'files': [
            {% for key, item in form.vars.data -%}
                {
                    {{ primary_key|e4js }}: {{ attribute(item, primary_key)|e4js }},
                    {% if nameable %}
                        {{ nameable_field|e4js }}: {{ attribute(item, nameable_field)|e4js }},
                    {% endif %}
                    {% if sortable %}
                        {{ sortable_field|e4js }}: {{ attribute(item, sortable_field)|e4js }},
                    {% endif %}
                    {% if editable %}
                        {% for field in editable %}
                        {{ field|e4js }}: {{ attribute(item, field)|default('')|e4js }},
                        {% endfor %}
                    {% endif %}
                    "size": {{ item.size }},
                    {% if itemFilter %}
                    "url": "{{ image_asset(item, 'file')|image_filter(itemFilter) }}",
                    {% else %}
                    "url": "{{ image_asset(item, 'file') }}",
                    {% endif %}
                    {% if item.preview and previewFilter and item.size < loadImageMaxFileSize %}
                        "thumbnail_url": "{{ image_asset(item, 'file')|image_filter(previewFilter) }}",
                    {% elseif item.preview and item.size < loadImageMaxFileSize %}
                        "thumbnail_url": "{{ image_asset(item, 'file') }}",
                    {% endif %}
                    "count": {{ key }},
                }
                {%- if not loop.last %},{% endif %}
            {% endfor %}
            ] // end of files array
        }; // end of files object

        // Load existing files:
        $field.uploadCollection('loadFiles', files);
    });
</script>
{% endspaceless %}
{% endautoescape %}
{% endblock s2a_upload_collection_js %}

{% block s2a_daterange_picker_js %}
{% autoescape false %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        $field = $('#{{ id }}');

    {% block s2a_daterange_picker_js_prototype %}
        $field.daterangepicker({
        {% if startDate is not empty %}
            'startDate':            {{ startDate|e4js }},
        {% endif %}
        {% if endDate is not empty %}
            'endDate':              {{ endDate|e4js }},
        {% endif %}
        {% if minDate is not empty %}
            'minDate':              {{ minDate|e4js }},
        {% endif %}
        {% if maxDate is not empty %}
            'maxDate':              {{ maxDate|e4js }},
        {% endif %}
        {% if dateLimit is not empty %}
            'dateLimit':            {{ dateLimit|e4js }},
        {% endif %}
        {% if timeZone is not empty %}
            'timeZone':             {{ timeZone|e4js }},
        {% endif %}
            'showDropdowns':        {{ showDropdowns|e4js }},
            'showWeekNumbers':      {{ showWeekNumbers|e4js }},
            'timePicker':           {{ timePicker|e4js }},
            'timePickerIncrement':  {{ timePickerIncrement|e4js }},
            'timePicker12Hour':     {{ timePicker12Hour|e4js }},
            'timePickerSeconds':    {{ timePickerSeconds|e4js }},
            'ranges':               {{ ranges|e4js }},
            'opens':                {{ opens|e4js }},
            'buttonClasses':        {{ buttonClasses|e4js }},
            'applyClass':           {{ applyClass|e4js }},
            'cancelClass':          {{ cancelClass|e4js }},
            'format':               {{ format|e4js }},
            'separator':            {{ separator|e4js }},
            'locale':               {{ locale|e4js }},
            'singleDatePicker':     {{ singleDatePicker|e4js }},
            'parentEl':             {{ parentEl|e4js }}
        }, {{ callback|e4js }});
    {% endblock s2a_daterange_picker_js_prototype %}
    });
</script>
{% endspaceless %}
{% endautoescape %}
{% endblock s2a_daterange_picker_js %}

{% block s2a_double_list_family_js_prototype_template %}
{% autoescape false %}
{% spaceless %}
    $field.doubleList();
{% endspaceless %}
{% endautoescape %}
{% endblock s2a_double_list_family_js_prototype_template %}

{% block s2a_double_list_document_js %}
{% autoescape false %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        $field = $('#{{ id }}');

    {% block s2a_double_list_document_js_prototype %}
        {{ block('s2a_double_list_family_js_prototype_template') }}
    {% endblock s2a_double_list_document_js_prototype %}
    });
</script>
{% endspaceless %}
{% endautoescape %}
{% endblock s2a_double_list_document_js %}

{% block s2a_double_list_entity_js %}
{% autoescape false %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        $field = $('#{{ id }}');

    {% block s2a_double_list_entity_js_prototype %}
        {{ block('s2a_double_list_family_js_prototype_template') }}
    {% endblock s2a_double_list_entity_js_prototype %}
    });
</script>
{% endspaceless %}
{% endautoescape %}
{% endblock s2a_double_list_entity_js %}

{% block s2a_double_list_model_js %}
{% autoescape false %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        $field = $('#{{ id }}');

    {% block s2a_double_list_model_js_prototype %}
        {{ block('s2a_double_list_family_js_prototype_template') }}
    {% endblock s2a_double_list_model_js_prototype %}
    });
</script>
{% endspaceless %}
{% endautoescape %}
{% endblock s2a_double_list_model_js %}

{% block s2a_knob_js %}
{% autoescape false %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        $field = $('#{{ id }}');

    {% block s2a_knob_js_prototype %}
        $field.knob({
            'width':            {{ width|e4js }},
            'height':           {{ height|e4js }},
            'displayInput':     {{ displayInput|e4js }},
            'displayPrevious':  {{ displayPrevious|e4js }},
            'angleArc':         {{ angleArc|e4js }},
            'angleOffset':      {{ angleOffset|e4js }},
            'cursor':           {{ cursor|e4js }},
            'readOnly':         {{ readOnly|e4js }},
            'thickness':        {{ thickness|e4js }},
            'fgColor':          {{ fgColor|e4js }},
            'bgColor':          {{ bgColor|e4js }},
            'lineCap':          {{ lineCap|e4js }},
            'step':             {{ step|e4js }},
            'min':              {{ min|e4js }},
            'max':              {{ max|e4js }}
        });
    {% endblock s2a_knob_js_prototype %}
    });
</script>
{% endspaceless %}
{% endautoescape %}
{% endblock s2a_knob_js %}

{% block s2a_mini_colors_js %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        var $field = $('#{{ id }}');

    {% block s2a_mini_colors_js_prototype %}
        var $configs = $.extend({
            defaultValue: $field.val(),
            theme: 'bootstrap',
            change: function(hex, opacity) {
            	var changeEvent = $.Event('colored');
            	$field.trigger(changeEvent, [ this, hex, opacity ]);
            }
        }, {{ configs|e4js|raw }});

        $field.minicolors($configs);
    {% endblock s2a_mini_colors_js_prototype %}
    });
</script>
{% endspaceless %}
{% endblock s2a_mini_colors_js %}

{% block s2a_select2_js %}
{% autoescape false %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        $field = $('#{{ id }}');

    {% block s2a_select2_js_prototype %}
        $field.select2({{ configs|e4js }});
    {% endblock s2a_select2_js_prototype %}
    });
</script>
{% endspaceless %}
{% endautoescape %}
{% endblock s2a_select2_js %}

{% block s2a_single_upload_js %}
{% autoescape false %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        var $field = $('#{{ id }}');

    {% block s2a_single_upload_js_prototype %}
        $field.singleUpload({
            minWidth:         {{ minWidth|e4js }},
            minHeight:        {{ minHeight|e4js }},
            maxWidth:         {{ maxWidth|e4js }},
            maxHeight:        {{ maxHeight|e4js }},
            previewImages:    {{ previewImages|e4js }},
            previewAsCanvas:  {{ previewAsCanvas|e4js }},
            isEmpty:          {{ (form.vars.data is empty)|e4js }},
            nameable:         {{ nameable|e4js }},
            deleteable:       {{ deleteable|e4js }},
            widget_name:      {{ (form.parent.vars.full_name ~ '['~name~']')|e4js }},
            filetypes:  {
                'inexistent':       {{ 's2a_single_upload.type.inexistent'|trans({}, 'AdmingeneratorFormExtensions')|e4js }},
                'audio':            {{ 's2a_single_upload.type.audio'|trans({}, 'AdmingeneratorFormExtensions')|e4js }},
                'archive':          {{ 's2a_single_upload.type.archive'|trans({}, 'AdmingeneratorFormExtensions')|e4js }},
                'html':             {{ 's2a_single_upload.type.html'|trans({}, 'AdmingeneratorFormExtensions')|e4js }},
                'image':            {{ 's2a_single_upload.type.image'|trans({}, 'AdmingeneratorFormExtensions')|e4js }},
                'pdf-document':     {{ 's2a_single_upload.type.pdf-document'|trans({}, 'AdmingeneratorFormExtensions')|e4js }},
                'plain-text':       {{ 's2a_single_upload.type.plain-text'|trans({}, 'AdmingeneratorFormExtensions')|e4js }},
                'presentation':     {{ 's2a_single_upload.type.presentation'|trans({}, 'AdmingeneratorFormExtensions')|e4js }},
                'spreadsheet':      {{ 's2a_single_upload.type.spreadsheet'|trans({}, 'AdmingeneratorFormExtensions')|e4js }},
                'text-document':    {{ 's2a_single_upload.type.text-document'|trans({}, 'AdmingeneratorFormExtensions')|e4js }},
                'unknown':          {{ 's2a_single_upload.type.unknown'|trans({}, 'AdmingeneratorFormExtensions')|e4js }},
                'video':            {{ 's2a_single_upload.type.video'|trans({}, 'AdmingeneratorFormExtensions')|e4js }}
            }
        });
    {% endblock s2a_single_upload_js_prototype %}
    });
</script>
{% endspaceless %}
{% endautoescape %}
{% endblock s2a_single_upload_js %}

{% block s2a_elastic_textarea_js %}
{% autoescape false %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        var $field = $('#{{ id }}');
        
    {% block s2a_elastic_textarea_js_prototype %}
        $field.elastic();
    {% endblock s2a_elastic_textarea_js_prototype %}
    });
</script>
{% endspaceless %}
{% endautoescape %}
{% endblock s2a_elastic_textarea_js %}

{% block choice_js %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        var $field = $('#{{ id }}');

    {% block choice_js_prototype %}
        {% if not expanded %}
        if ($field.hasClass("selectpicker")) {
            $field.selectpicker();
        }
        {% endif %}
    {% endblock choice_js_prototype %}
    });
</script>
{% endspaceless %}
{% endblock choice_js %}

{% block s2a_datetime_family_js_prototype_template %}
{% autoescape false %}
{% spaceless %}
    var $widget = $('#'+$field.attr('id')+'_widget');
    var config = {{ {
        'locale': app.request.locale,
        'format': widget_format
    }|merge(config)|e4js|raw }};

    $widget.datetimepicker(config);
{% if widget_value is defined %}
    $widget.data("DateTimePicker").date(moment("{{ widget_value }}", "{{ widget_format }}"));
{% else %}
    $widget.data("DateTimePicker").date(null);
{% endif %}

    var copyValue = function() {
        var date = $widget.data("DateTimePicker").date();
        if(date == null) $field.val('')
        else $field.val(moment(date).format("{{ widget_format }}"));
    };

    $widget.on("dp.change", copyValue);
    $widget.find('a.s2a-date-btn').on('click', function(e){
        e.preventDefault();
        e.stopPropagation();
        $widget.data("DateTimePicker").show();
    });
    $widget.find('a.s2a-clear-btn').on('click', function(e){
        e.preventDefault();
        e.stopPropagation();
        $widget.data("DateTimePicker").date(null);
        $widget.trigger("dp.change");
    });
    $field.closest('form').on('submit', copyValue);
{% endspaceless %}
{% endautoescape %}
{% endblock s2a_datetime_family_js_prototype_template %}

{% block s2a_datetime_picker_js %}
{% autoescape false %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        var $field = $('#{{ id }}');

    {% block s2a_datetime_picker_js_prototype %}
        {{ block('s2a_datetime_family_js_prototype_template') }}
    {% endblock s2a_datetime_picker_js_prototype %}
    });
</script>
{% endspaceless %}
{% endautoescape %}
{% endblock s2a_datetime_picker_js %}

{% block s2a_date_picker_js %}
{% autoescape false %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        var $field = $('#{{ id }}');

    {% block s2a_date_picker_js_prototype %}
        {{ block('s2a_datetime_family_js_prototype_template') }}
    {% endblock s2a_date_picker_js_prototype %}
    });
</script>
{% endspaceless %}
{% endautoescape %}
{% endblock s2a_date_picker_js %}

{% block s2a_time_picker_js %}
{% autoescape false %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        var $field = $('#{{ id }}');

    {% block s2a_time_picker_js_prototype %}
        {{ block('s2a_datetime_family_js_prototype_template') }}
    {% endblock s2a_time_picker_js_prototype %}
    });
</script>
{% endspaceless %}
{% endautoescape %}
{% endblock s2a_time_picker_js %}

{% block s2a_google_map_js %}
{% autoescape false %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        var $field = $('#{{ id }}');

    {% block s2a_google_map_js_prototype %}
        $field.find("[id$='_map_canvas']").googleMap({
            'search_input_el':      $field.find("[id$='_search']"),
            'search_action_el':     $field.find("[id$='_search_button']"),
            'search_error_el':      $field.find("[id$='_error']"),
            'current_position_el':  $field.find("[id$='_current_position']"),
            'default_lat':          {{ (value is defined and value.lat is defined and value.lat is not null) ? value.lat|e4js : default_lat|e4js }},
            'default_lng':          {{ (value is defined and value.lng is defined and value.lng is not null) ? value.lng|e4js : default_lng|e4js }},
            'default_zoom':         {{ (value is defined and value.lat is defined and value.lng is defined) ? 15|e4js : 5|e4js }},
            'lat_field':            $('#{{ id ~ "_" ~ lat_name }}'),
            'lng_field':            $('#{{ id ~ "_" ~ lng_name }}'),
            'callback':             {{ callback|e4js }},
            'error_handler':        {{ error_handler|e4js }}
        });
    {% endblock s2a_google_map_js_prototype %}
    });
</script>
{% endspaceless %}
{% endautoescape %}
{% endblock s2a_google_map_js %}
